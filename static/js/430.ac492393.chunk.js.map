{"version":3,"file":"static/js/430.ac492393.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = ({ handleSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    handleSubmit({\n      name,\n      number,\n    });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <label className={css.formLabel}>Name </label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleNameChange}\n      />\n      <label className={css.formLabel}>Number </label>\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleNumberChange}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { onFilterChange } from 'redux/contactsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const handleChange = event => {\n    dispatch(onFilterChange(event.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        onChange={handleChange}\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","// import { createSelector } from '@reduxjs/toolkit';\n\n// const selectPhonebook = state => state.contacts;\n\n// export const selectFilterValue = createSelector(\n//   selectPhonebook,\n//   contacts => contacts.filter\n// );\n\n// export const selectContacts = createSelector(\n//   selectPhonebook,\n//   contacts => contacts.items\n// );\n\n// export const selectIsLoading = createSelector(\n//   selectPhonebook,\n//   contacts => contacts.isLoading\n// );\n\n// export const selectError = createSelector(\n//   selectPhonebook,\n//   contacts => contacts.error\n// );\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilterValue = state => state.contacts.filter;\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/thunks';\nimport { selectContacts, selectFilterValue } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name?.toLowerCase().includes(filter?.toLowerCase())\n  );\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestContacts, addContact, deleteContact } from 'redux/thunks';\nimport {\n  selectContacts,\n  selectError,\n  selectFilterValue,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { onFilterChange } from 'redux/contactsSlice';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilterValue);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const handleAddContact = newContact => {\n    const contactsLists = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (contactsLists) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n\n  const handleDelete = contactName => {\n    dispatch(deleteContact(contactName));\n  };\n\n  const handleChangeFilter = filter => {\n    dispatch(onFilterChange(filter));\n  };\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm handleSubmit={handleAddContact} />\n      <h2> Contacts</h2>\n      <Filter filter={filter} handleChange={handleChangeFilter} />\n      {isLoading && <p>Loading contacts ... </p>}\n      {error && <p>{error}</p>}\n      <ContactList\n        contacts={contacts}\n        filter={filter}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["ContactForm","handleSubmit","useState","name","setName","number","setNumber","className","css","onSubmit","e","preventDefault","type","title","required","placeholder","value","onChange","target","Filter","dispatch","useDispatch","filter","useSelector","state","event","onFilterChange","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","ContactList","filteredContacts","contact","toLowerCase","includes","map","onClick","contactId","id","deleteContact","useEffect","requestContacts","style","height","display","flexDirection","justifyContent","alignItems","fontSize","color","newContact","some","alert","addContact","handleChange","handleDelete","contactName"],"sourceRoot":""}